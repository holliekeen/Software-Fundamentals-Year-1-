Snake Souce Code:

"""  
import pygame   #these are the libarys and modules
import random
import sys
"""

pygame.init()   #background music 
from pygame import mixer 
mixer.music.load('scene.wav')
mixer.music.play(-1)
pygame.display.set_caption('Snake Game By Hollie') #code for the pygame window caption


class Snake():   #this is the code for the snake block
    def __init__(self):
        self.length = 1
        self.positions = [((screen_width/2), (screen_height/2))] #postions for each block, that makes up the snake
        self.direction = random.choice([up, down, left, right]) #direction of the snake
        self.color = (17, 24, 47) #snake colour
    
        self.score = 0
        
    def get_head_position(self):
        return self.positions[0]

    def turn(self, point):   
        if self.length > 1 and (point[0]*-1, point[1]*-1) == self.direction:
            return
        else:
            self.direction = point

    def move(self):
        cur = self.get_head_position()
        x,y = self.direction
        new = (((cur[0]+(x*gridsize))%screen_width), (cur[1]+(y*gridsize))%screen_height)
        if len(self.positions) > 2 and new in self.positions[2:]:
            self.reset()
        else:
            self.positions.insert(0,new)
            if len(self.positions) > self.length:
                self.positions.pop()

    def reset(self):
        self.length = 1
        self.positions = [((screen_width/2), (screen_height/2))]
        self.direction = random.choice([up, down, left, right])
        self.score = 0

    def draw(self,surface):
        for p in self.positions:
            r = pygame.Rect((p[0], p[1]), (gridsize,gridsize))
            pygame.draw.rect(surface, self.color, r)
            pygame.draw.rect(surface, (255,255, 0), r, 1)
    
    def handle_keys(self):    #check for key board strokes, and turn the snake dependant on those
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
                
               
            elif event.type == pygame.KEYDOWN:
      
                if event.key == pygame.K_UP:
                    self.turn(up)
                elif event.key == pygame.K_DOWN:
                    self.turn(down)
                elif event.key == pygame.K_LEFT:
                    self.turn(left)
                elif event.key == pygame.K_RIGHT:
                    self.turn(right)
         
                    

class Food():  #this is the code for the properties of the block the snake needs to eat in order to enlarge.
    def __init__(self):
        self.position = (0,0) #postion on the screen
        self.color = (0, 255, 0)  #colour of the block
        self.randomize_position()   #allowing the block to randomly move for the next part of the game, when the snake eats it 

    def randomize_position(self):
        self.position = (random.randint(0, grid_width-1)*gridsize, random.randint(0, grid_height-1)*gridsize)  #this places the food on a random x,y coordinate of the grid

    def draw(self, surface):
        r = pygame.Rect((self.position[0], self.position[1]), (gridsize, gridsize))
        pygame.draw.rect(surface, self.color, r)
        pygame.draw.rect(surface, (255, 0, 255), r, 1)

def drawGrid(surface):   
    for y in range(0, int(grid_height)):
        for x in range(0, int(grid_width)):
            if (x+y)%2 == 0:                     #code for the checkered background
                r = pygame.Rect((x*gridsize, y*gridsize), (gridsize,gridsize))
                pygame.draw.rect(surface,(128,0,128), r)  #colour of the background
            else:
                rr = pygame.Rect((x*gridsize, y*gridsize), (gridsize,gridsize))
                pygame.draw.rect(surface, (255,0,255), rr) #colour of the background to form grid

screen_width = 480     #variables for the game features
screen_height = 480     

gridsize = 20
grid_width = screen_width/gridsize
grid_height = screen_height/gridsize

up = (0,-1)             #code for possible movements of the snake 
down = (0,1)
left = (-1,0)
right = (1,0)

def main():           #loop
    pygame.init()

    clock = pygame.time.Clock()
    screen = pygame.display.set_mode((screen_width, screen_height), 0, 32)

    surface = pygame.Surface(screen.get_size())  
    surface = surface.convert()
    drawGrid(surface)

    snake = Snake()
    food = Food()

    myfont = pygame.font.SysFont("MVBoli",35)

    while (True):
        clock.tick(10)
        snake.handle_keys()
        drawGrid(surface)
        snake.move()
        if snake.get_head_position() == food.position: #once snake has eaten food, and length is now added
            snake.length += 1
            snake.score += 1
            food.randomize_position()
        snake.draw(surface)
        food.draw(surface)
        screen.blit(surface, (0,0))
        text = myfont.render("Your Score: ({0})".format(snake.score), 1, (0,0,0))
        screen.blit(text, (5,10))
        pygame.display.update()
        
       

main()